server:
  port: 8083
spring:
  application:
    name: ORDER-SERVICE
  config:
    import: configserver:${CONFIG_SERVER_URL:http://localhost:9296}
  datasource:
    url: jdbc:mysql://${DB_HOST:localhost}:3306/order_db
    username: root
    password: root
    driverClassName: com.mysql.cj.jdbc.Driver
  jpa:
    database-platform: org.hibernate.dialect.MySQLDialect
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        "[format_sql]": true
        "[use_sql_comments]": true
        "[show_sql]": true
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://dev-39197128.okta.com/oauth2/default
      client:
        registration:
          internal-client:
            provider: okta
            authorization-grant-type: client_credentials
            scope: internal
            client-id: 0oab7qloec9P34T1F5d7
            client-secret: rsMpAEj6KGeb90DIQy_kxDl-qUI7HTQM24qmYAC6dtCfd7NmPn4eIpMPrZZJ6TFt
        provider:
          okta:
            issuer-uri: https://dev-39197128.okta.com/oauth2/default

resilience4j:
  circuitbreaker:
    instances:
      external:
        event-consumer-buffer-size: 10
        failure-rate-threshold: 50
        minimum-number-of-calls: 5
        automatic-transition-from-open-to-half-open-enabled: true
        wait-duration-in-open-state: 5s
        permitted-number-of-calls-in-half-open-state: 3
        sliding-window-size: 10
        sliding-window-type:

# cloud-gateway 에 설정한 spring.cloud.gateway.routes.uri 의 값을 사용

microservices:
  product: http://product-service-svc/product/ # $URL/product/ 컨트롤러로 접근
  payment: http://payment-service-svc/payment/ # $URL/payment/ 컨트롤러로 접근